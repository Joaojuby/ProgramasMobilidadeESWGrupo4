@model ProgramasMobilidadeESW2017.Models.Instituicao

@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

@{
    ViewData["Title"] = "Details";
}

<div>
    <h3>@Html.DisplayTextFor(model => model.Nome)</h3>
    <h4>@Html.DisplayTextFor(model => model.Pais.Nome)</h4>
    <br />
    <div class="row">
        @Html.LabelFor(model => model.Morada, new { @class = "col-sm-3 col-form-label" })
        <span class="col-sm-9">
            @Html.DisplayTextFor(model => model.Morada)
        </span>
    </div>
    <div class="row">
        @Html.LabelFor(model => model.Email, new { @class = "col-sm-3 col-form-label" })
        <span class="col-sm-9">
            @Html.DisplayTextFor(model => model.Email)
        </span>
    </div>
    <div class="row">
        @Html.LabelFor(model => model.PhoneNumber, new { @class = "col-sm-3 col-form-label" })
        <span class="col-sm-9">
            @Html.DisplayTextFor(model => model.PhoneNumber)
        </span>
    </div>
    <div class="row">
        @Html.LabelFor(model => model.Website, new { @class = "col-sm-3 col-form-label" })
        <span class="col-sm-9">
            @Html.DisplayTextFor(model => model.Website)
        </span>
    </div>
</div>

<br />
<div>
    <a asp-action="Index" class="btn btn-sm btn-success">Voltar</a>
    @if (SignInManager.IsSignedIn(User) && await UserManager.IsInRoleAsync(UserManager.GetUserAsync(User).Result, "Administrador"))
    {
        <a asp-action="Edit" asp-route-id="@Model.ID" class="btn btn-sm btn-warning">Editar</a>
    }
</div>
